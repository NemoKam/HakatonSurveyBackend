"""empty message

Revision ID: ccde1a5c5a64
Revises: 
Create Date: 2024-11-09 12:42:49.793144

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ccde1a5c5a64'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_table',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('surname', sa.String(), nullable=False),
    sa.Column('patronymic', sa.String(), nullable=True),
    sa.Column('telegram_user_id', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('email_confirmation_code', sa.String(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_table_id'), 'user_table', ['id'], unique=False)
    op.create_table('survey_table',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_anonim', sa.Boolean(), nullable=False),
    sa.Column('is_quiz', sa.Boolean(), nullable=False),
    sa.Column('show_results', sa.Boolean(), nullable=False),
    sa.Column('show_score', sa.Boolean(), nullable=False),
    sa.Column('send_multiple_times', sa.Boolean(), nullable=False),
    sa.Column('is_finished', sa.Boolean(), nullable=False),
    sa.Column('expire_datetime', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_survey_table_id'), 'survey_table', ['id'], unique=False)
    op.create_table('question_table',
    sa.Column('survey_id', sa.Uuid(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('type', postgresql.ENUM('text', 'choose_one', 'choose_many', 'dropdown_list', name='question_type_enum'), nullable=False),
    sa.Column('is_required', sa.Boolean(), nullable=False),
    sa.Column('show_answers', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['survey_id'], ['survey_table.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_question_table_id'), 'question_table', ['id'], unique=False)
    op.create_table('user_survey_result_table',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('survey_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['survey_id'], ['survey_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_survey_result_table_id'), 'user_survey_result_table', ['id'], unique=False)
    op.create_table('question_answer_table',
    sa.Column('question_id', sa.Uuid(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['question_table.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_question_answer_table_id'), 'question_answer_table', ['id'], unique=False)
    op.create_table('user_question_result_table',
    sa.Column('user_survey_result_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_survey_result_id'], ['user_survey_result_table.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_question_result_table_id'), 'user_question_result_table', ['id'], unique=False)
    op.create_table('user_answer_result_table',
    sa.Column('user_question_result_id', sa.Uuid(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_question_result_id'], ['user_question_result_table.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_answer_result_table_id'), 'user_answer_result_table', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_answer_result_table_id'), table_name='user_answer_result_table')
    op.drop_table('user_answer_result_table')
    op.drop_index(op.f('ix_user_question_result_table_id'), table_name='user_question_result_table')
    op.drop_table('user_question_result_table')
    op.drop_index(op.f('ix_question_answer_table_id'), table_name='question_answer_table')
    op.drop_table('question_answer_table')
    op.drop_index(op.f('ix_user_survey_result_table_id'), table_name='user_survey_result_table')
    op.drop_table('user_survey_result_table')
    op.drop_index(op.f('ix_question_table_id'), table_name='question_table')
    op.drop_table('question_table')
    op.drop_index(op.f('ix_survey_table_id'), table_name='survey_table')
    op.drop_table('survey_table')
    op.drop_index(op.f('ix_user_table_id'), table_name='user_table')
    op.drop_table('user_table')
    # ### end Alembic commands ###
